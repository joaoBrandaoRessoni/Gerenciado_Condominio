/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gerenciadorcondominio.view;

import com.mycompany.gerenciadorcondominio.controller.PessoaController;
import com.mycompany.gerenciadorcondominio.controller.ResidenciaController;
import com.mycompany.gerenciadorcondominio.model.PessoaModal;
import com.mycompany.gerenciadorcondominio.model.ResidenciaModal;
import java.awt.Color;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maria Luiza
 */
public class ResidenciaShow extends javax.swing.JFrame {
    ResidenciaController residenciaController = new ResidenciaController();
    PessoaController pessoaController = new PessoaController();
    Map<String, Integer> mapaNomeId = new HashMap<>();
    private int id;

    /**
     * Creates new form ResidenciaShow
     */
    public ResidenciaShow(int id) {
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        screenConfigs();
        initComponents();
        this.id = id;
        
        try{
            // dados do endereço da residência
            ResidenciaModal residencia = residenciaController.showResidencia(id);

            ruaField.setText(residencia.getLogradouro());
            numeroField.setText(String.valueOf(residencia.getNumero()));
            cepField.setText(residencia.getCep());
            
            // dados do proprietário da residência
            PessoaModal pessoa = residenciaController.showProprietario(id);
            
            List<PessoaModal> people = pessoaController.indexPessoa();

            people.forEach(proprietario -> {
                pessoasBox.addItem(proprietario.getNome() + " - " + proprietario.getCpf());  
                mapaNomeId.put(proprietario.getNome() + " - " + proprietario.getCpf(), proprietario.getId());  // associa nome -> id
            });
            String itemSelecionado = pessoa.getNome() + " - " + pessoa.getCpf();
            pessoasBox.setSelectedItem(itemSelecionado);
            people.forEach(morador -> {
                moradoresBox.addItem(morador.getNome() + " - " + morador.getCpf());  
                mapaNomeId.put(morador.getNome() + " - " + morador.getCpf(), morador.getId());  // associa nome -> id
            });
            moradoresBox.setSelectedItem(null);
            
            // dados dos moradoeres da residência
            moradoresTable = residenciaController.showMoradores(id, moradoresTable).table;
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane, "Erro ao conectar com o banco de dados");
        }
    }
    
    private void screenConfigs() {
        this.setBackground(new Color(30, 144, 255));
        this.setSize(950, 700);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ruaField = new javax.swing.JTextField();
        numeroField = new javax.swing.JTextField();
        cepField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        moradoresTable = new javax.swing.JTable();
        editarBtn = new javax.swing.JButton();
        editarBtn1 = new javax.swing.JButton();
        moradoresBox = new javax.swing.JComboBox<>();
        pessoasBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        removerBtn = new javax.swing.JButton();
        excluirBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Endereço");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Proprietário");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Moradores");

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setToolTipText("");
        jPanel2.setName("Endereço"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Número");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("CEP");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("Rua");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(168, 168, 168))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ruaField, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(numeroField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cepField, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ruaField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cepField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        moradoresTable.setBackground(new java.awt.Color(204, 204, 255));
        moradoresTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "CPF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(moradoresTable);

        editarBtn.setBackground(new java.awt.Color(204, 204, 255));
        editarBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        editarBtn.setText("Editar");
        editarBtn.setName("editarBtn"); // NOI18N
        editarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBtnActionPerformed(evt);
            }
        });

        editarBtn1.setBackground(new java.awt.Color(204, 204, 255));
        editarBtn1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        editarBtn1.setText("Cancelar");
        editarBtn1.setName("editarBtn"); // NOI18N
        editarBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBtn1ActionPerformed(evt);
            }
        });

        moradoresBox.setBackground(new java.awt.Color(204, 204, 255));
        moradoresBox.setToolTipText("Selecione uma pessoa...");
        moradoresBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moradoresBoxActionPerformed(evt);
            }
        });

        pessoasBox.setBackground(new java.awt.Color(204, 204, 255));
        pessoasBox.setToolTipText("Selecione uma pessoa...");
        pessoasBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pessoasBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("Adicionar morador");

        removerBtn.setBackground(new java.awt.Color(204, 204, 255));
        removerBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        removerBtn.setText("Remover");
        removerBtn.setName("editarBtn"); // NOI18N
        removerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerBtnActionPerformed(evt);
            }
        });

        excluirBtn.setBackground(new java.awt.Color(204, 204, 255));
        excluirBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        excluirBtn.setText("Excluir");
        excluirBtn.setName("editarBtn"); // NOI18N
        excluirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(editarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(excluirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(editarBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(moradoresBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(621, 621, 621))
                            .addComponent(pessoasBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(removerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pessoasBox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(moradoresBox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(removerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(excluirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBtnActionPerformed
        String rua = ruaField.getText();
        int numero = Integer.parseInt(numeroField.getText());
        String cep = cepField.getText();
        
        int idProprietario = -1;
        String nomeSelecionado = (String) pessoasBox.getSelectedItem();
        if (nomeSelecionado != null) {
            idProprietario = mapaNomeId.getOrDefault(nomeSelecionado, -1);
        }
        
        try {
            residenciaController.updateResidencia(numero, cep, rua, id);
            residenciaController.alterarProprietario(idProprietario, id);
            JOptionPane.showMessageDialog(null, "Residência atualizada com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar residência: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

        new ResidenciaIndex();
        this.setVisible(false);
    }//GEN-LAST:event_editarBtnActionPerformed

    private void editarBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBtn1ActionPerformed
        new ResidenciaIndex();
        this.setVisible(false);
    }//GEN-LAST:event_editarBtn1ActionPerformed

    private void moradoresBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moradoresBoxActionPerformed
        try {
            List<PessoaModal> people = pessoaController.indexPessoa();
            
            String selecionado = (String) moradoresBox.getSelectedItem();
            if (selecionado != null && !selecionado.isEmpty()) {
                int idMorador = mapaNomeId.getOrDefault(selecionado, -1);

                DefaultTableModel model = (DefaultTableModel) moradoresTable.getModel();
                String[] partes = selecionado.split(" - ");
                String nome = partes[0];
                String cpf = partes.length > 1 ? partes[1] : "";

                model.addRow(new Object[]{nome, cpf});
                residenciaController.adicionarMorador(idMorador, id);
            }
            
        } catch(SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao buscar moradores");
        }
    }//GEN-LAST:event_moradoresBoxActionPerformed

    private void pessoasBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pessoasBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pessoasBoxActionPerformed

    private void removerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerBtnActionPerformed
        int row = moradoresTable.getSelectedRow();
        
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione um morador para continuar", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                List<Integer> ids = residenciaController.showMoradores(id, moradoresTable).ids;
                int idMorador = ids.get(row);

                int resposta = JOptionPane.showConfirmDialog(
                    null,
                    "Você deseja continuar?",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION
                );

                if (resposta == JOptionPane.YES_OPTION) {
                    residenciaController.removerMorador(idMorador, id);
                } else {
                    return;
                }
                
                new ResidenciaIndex();
                this.setVisible(false);
                
            } catch(SQLException e){
                JOptionPane.showMessageDialog(rootPane, "Erro ao conectar com o banco de dados");
            }
        } 
    }//GEN-LAST:event_removerBtnActionPerformed

    private void excluirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirBtnActionPerformed
        int resposta = JOptionPane.showConfirmDialog(
            null,
            "Você deseja continuar?",
            "Confirmação",
            JOptionPane.YES_NO_OPTION
        );
        
         try {
            if (resposta == JOptionPane.YES_OPTION) {
                residenciaController.deleteResidencia(id);
            } else {
                return;
            }

            new ResidenciaIndex();
            this.setVisible(false);
        } catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane, "Erro ao conectar com o banco de dados");
        }
    }//GEN-LAST:event_excluirBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResidenciaShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResidenciaShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResidenciaShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResidenciaShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResidenciaShow(1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cepField;
    private javax.swing.JButton editarBtn;
    private javax.swing.JButton editarBtn1;
    private javax.swing.JButton excluirBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> moradoresBox;
    private javax.swing.JTable moradoresTable;
    private javax.swing.JTextField numeroField;
    private javax.swing.JComboBox<String> pessoasBox;
    private javax.swing.JButton removerBtn;
    private javax.swing.JTextField ruaField;
    // End of variables declaration//GEN-END:variables
}
